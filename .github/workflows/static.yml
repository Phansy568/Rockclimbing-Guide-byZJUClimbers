# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # 指定 Node.js 版本

      # 3. 安装依赖（如果需要）
      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build  # 确保生成 bundle.js


      # 4. 编译 SCSS 文件
      - name: Compile SCSS
        run: npx sass src/scss/main.scss dist/styles.css

      # 5. 配置 Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 6. 上传编译后的文件作为 artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 上传整个 dist 目录（包含编译后的 CSS 文件）
          path: 'dist'

      # 7. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4